-- update the CURL constants with:
-- eui curlimport.ex < /usr/include/curl/curl.h > ../include/std/curl.e


include std/regex.e as regex
include std/io.e
constant macroconstant     = regex:new("^ *#define +([A-Z][A-Z_]*) +([0-9]+)")
constant curloptionpattern = regex:new("CINIT\\(([A-Z_0-9]+), [A-Z]+, ([0-9]+)")
constant curlproto_pattern = regex:new("^ *#define (CURLPROTO_[A-Z]+) +\\(1<<([0-9]+)\\)")
constant OUT = STDOUT, IN = STDIN

object line
printf(OUT, "-- Do not edit this file:  use source/curlimport.ex to generate it.\n", {})
puts(OUT, "export constant\n")
while sequence(line) with entry do
    object m = regex:matches( curloptionpattern, line)
    if sequence(m) then
     	printf(OUT, repeat(' ',8) & "CURLOPT_%s = %s,\n", {m[2], m[3]}) 
    end if
    m = regex:matches( macroconstant, line)
    if sequence(m) then
	printf(OUT, repeat(' ',8) & "%s = %s,\n", {m[2], m[3]})
    end if 
    m = regex:matches( curlproto_pattern, line)
    if sequence(m) then
        printf(OUT, repeat(' ', 8) & "%s = power(2,%s),\n", m[2..3]) 
    end if
entry
     line = gets(IN)
end while
puts(OUT, "$\n")
